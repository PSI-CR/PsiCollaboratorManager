@model PSIEmployeeManagement.Models.CollaboratorModel
@using PSIEmployeeManagement.Data.EmergencyContactbyCollaborators

@{
    Layout = "~/Views/Shared/_basicBigPhoto.cshtml";
}

<link href="~/Content/Css/Collaborator/CreateEdit.css" rel="stylesheet" />
<script src="~/Scripts/Employees.js"></script>

<script type="text/javascript">
       var parameters = {
              @if (Model.CantonId.HasValue) {
                  @Html.Raw("cantonid:" + @Model.CantonId + ",\n");
              }
              else {
                  @Html.Raw("cantonid:" + 0 + ",\n");
              }
              @if (Model.DistrictId.HasValue) {
                   @Html.Raw("districtid:" + @Model.DistrictId + ",\n");
              }
              else {
                  @Html.Raw("districtid:" + 0 + ",\n");
              }
              @if (Model.ProvinceId.HasValue) {
                   @Html.Raw("provinceid:" + @Model.ProvinceId + ",\n");
              }
              else {
                  @Html.Raw("provinceid:" + 0 + ",\n");
              }
    }

      $(document).ready(function () {
          var employeeManagement = new window.EmployeeManagement(0,
              parameters.cantonid == 0 ? null : parameters.cantonid,
              parameters.provinceid == 0 ? null : parameters.provinceid,
              parameters.districtid == 0 ? null : parameters.districtid);
          employeeManagement.Build();
      });
</script>


<div id="CollaboratorCreateEditContainer">
    @using (Html.BeginForm("Create", "Collaborator", FormMethod.Post, new { enctype = "multipart/form-data", id = "FormCollaboratorContainer" }))
    {
        @Html.AntiForgeryToken()
        <div class="fieldset" id="CollaboratorFieldCreateContainer">
            <div id="CapturePhoto">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#capturePhotoModal">
                    Capturar Fotografía
                </button>
            </div>

            <div id="PersonalInformationSection">
                <div class="title">
                    <h3>Información Personal</h3>
                    <div>
                        <div style="color:red; ">
                            <h6>Datos requeridos*</h6>
                        </div>
                    </div>
                </div>
                <div class="personalInformationSectionFlex">
                    <div>
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control", placeholder = "Nombre", title = "Favor ingrese el Nombre", required = "" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control", placeholder = "Apellido", title = "Favor ingrese el Apellido", required = "" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.DNICollaborator, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.DNICollaborator, htmlAttributes: new { @class = "form-control", @pattern = "[0-9]{9}|[0-9]{12}", placeholder = "Ejemplo: 301230123", title = "Favor ingrese número de cédula", required = "" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control", title = "Favor seleccione una fecha", required = "" })
                    </div>
                </div>
                <div class="personalInformationSectionFlexRadioButton">
                    <div>
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "required" })
                        <div class="radio-buttons">
                            <div>
                                @Html.RadioButtonFor(model => model.Gender, 1, new { id = "rbtnFemale", required = "" }) <label for="rbtnFemale" title="Favor seleccione una opción">Mujer</label>
                            </div>
                            <div>
                                @Html.RadioButtonFor(model => model.Gender, 2, new { id = "rbtnMale", required = "" }) <label for="rbtnMale" title="Favor seleccione una opción">Hombre</label>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.Gender, new { id = "GenderValue" })

                    <div>
                        @Html.LabelFor(model => model.MaritalStatusId, htmlAttributes: new { @class = "required" })
                        <div class="radio-buttons">
                            <div>
                                @Html.RadioButtonFor(model => model.MaritalStatusId, "1", new { id = "rbtnYesMarital", required = "" }) <label for="rbtnYesMarital" title="Favor seleccione una opción">Si</label>
                            </div>
                            <div>
                                @Html.RadioButtonFor(model => model.MaritalStatusId, "2", new { id = "rbtnNoMarital", required = "" }) <label for="rbtnNoMarital" title="Favor seleccione una opción">No</label>
                            </div>
                        </div>
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Parent, htmlAttributes: new { @class = "required" })
                        <div class="radio-buttons">
                            <div>
                                @Html.RadioButtonFor(model => model.Parent, true, new { id = "rbtnYesParent", required = "" }) <label for="rbtnYesParent" title="Please select an option">Si</label>
                            </div>
                            <div>
                                @Html.RadioButtonFor(model => model.Parent, false, new { id = "rbtnNoParent", required = "" }) <label for="rbtnNoParent" title="Please select an option">No</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="DirectionSection">
                <div>
                    <h3>Dirección</h3>
                </div>
                <div class="directionSectionFlex">
                    <div>
                        @Html.LabelFor(model => model.ProvinceName, htmlAttributes: new { @class = "required" })
                        @Html.DropDownListFor(model => model.ProvinceId, ViewBag.Provinces as List<SelectListItem>, "-Provincia-", new { @class = "form-control", @title = "Favor seleccione una opción", required = "" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.CantonName, htmlAttributes: new { @class = "required" })
                        @Html.DropDownListFor(model => model.CantonId, new List<SelectListItem>(), "-Cantón-", new { @class = "form-control", @title = "Favor seleccione una opción", required = "" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.DistrictName, htmlAttributes: new { @class = "control-label required" })
                        @Html.DropDownListFor(model => model.DistrictId, new List<SelectListItem>(), "-Distrito-", new { @class = "form-control", @title = "Favor seleccione una opción", required = "" })
                    </div>
                </div>
                <div class="description">
                    @Html.LabelFor(model => model.AddressLine, htmlAttributes: new { @class = "control-label required" })
                    @Html.TextAreaFor(model => model.AddressLine, new { @class = "form-control", rows = 3, cols = 71, placeholder = " Dirección exacta", title = "Favor ingrese la dirección exacta.", required = "" })
                </div>
            </div>

            <div id="ContactSection">
                <div>
                    <h3>Contacto</h3>
                </div>
                <div class="contactSection">
                    <div>
                        @Html.LabelFor(model => model.Telephone1, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.Telephone1, htmlAttributes: new { @class = "form-control", @pattern = "[0-9]{8}", placeholder = "Ejemplo: 88888888", title = "El formato debe ser de ocho dígitos sin espacios.", required = "" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.Telephone2)
                        @Html.TextBoxFor(model => model.Telephone2, htmlAttributes: new { @class = "form-control", @pattern = "[0-9]{8}", placeholder = "Ejemplo: 88888888", title = "El formato debe ser de ocho dígitos sin espacios" })
                    </div>
                </div>
                <div class="description">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "required" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", placeholder = "Ejemplo: user@gmail.com", title = "Ejemplo de formato de correo 'user@gmail.com'", required = "" })
                </div>
            </div>

            <div id="PSIInformationSection">
                <div>
                    <h3>PSI Información</h3>
                </div>
                <div class="psiInformationSection">
                    <div>
                        @Html.LabelFor(model => model.OperatorNumber, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.OperatorNumber, new { type = "number", min = 1, max = 999, @class = "form-control", @required = "" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.RFIDCode)
                        @Html.TextBoxFor(model => model.RFIDCode, new { type = "text", @class = "form-control", @title = "Favor ingrese el código RFID" })
                    </div>
                </div>
            </div>

            <div id="UserAccountSection">
                <h3>Cuenta Usuario</h3>
                <div class="userAccountSection">
                    <div>
                        @Html.LabelFor(model => model.Password)
                        @Html.TextBoxFor(model => model.Password, new { type = "text", @class = "form-control", @title = "Este campo no es editable", @readonly = "readonly" })
                    </div>
                    <div>
                        @Html.CheckBoxFor(model => model.CreateUserAccount, htmlAttributes: new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.CreateUserAccount)
                    </div>
                </div>
            </div>

            <div id="HealthConditionSection">
                <div>
                    <h3>Condición Salud</h3>
                </div>
                <div class="healthConditionSection">
                    <div class="description">
                        @Html.LabelFor(model => model.Diseases)
                        @Html.TextAreaFor(model => model.Diseases, new { type = "text", @class = "form-control", placeholder = "Padecimientos ó enfermedades", title = "Ingrese la lista de padecimientos o enfermedades diagnosticados" })
                    </div>
                    <div class="healthConditionSectionCheckBox">
                        @Html.CheckBoxFor(model => model.TakingMedications, htmlAttributes: new { title = "Marcar si el colaborador actualmente se encuentra bajo un tratamiento medico" })
                        @Html.LabelFor(model => model.TakingMedications)
                    </div>
                    <div class="description">
                        @Html.LabelFor(model => model.Note)
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", rows = 3, cols = 67, placeholder = "Notas Medicas", title = "Favor agregue notas medicas importantes." })
                    </div>
                </div>
            </div>

            <div id="BankAccountSection">
                <div>
                    <h3>Cuenta Bancaria</h3>
                </div>
                <div class="bankAccountSection">
                    <div>
                        <label class="required">Banco</label>
                        @Html.DropDownListFor(model => model.BankId, ViewBag.Banks as List<SelectListItem>, "-Banco-", new { @class = "form-control", required = "", title = "Favor elija una entidad bancaria." })
                    </div>
                    <div>
                        <label class="required">Tipo de moneda</label>
                        @Html.DropDownListFor(model => model.CurrencyTypeId, ViewBag.CurrencyTypes as List<SelectListItem>, "-Moneda-", new { @class = "form-control", required = "", title = "Favor elija un tipo de moneda." })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.NumberBankAccount, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.NumberBankAccount, htmlAttributes: new { @class = "form-control", placeholder = "Número Cuenta Bancaria", title = "Fill field with Name", required = "" })
                    </div>
                    <div>
                        @Html.LabelFor(model => model.IBANAccount, htmlAttributes: new { @class = "required" })
                        @Html.TextBoxFor(model => model.IBANAccount, htmlAttributes: new { @class = "form-control", placeholder = "Ejemplo: CR55015100010012345678", required = "", pattern = "^CR\\d{2}[0-9A-Za-z]{18}$", title = "Favor digite el número de cuenta IBAN con el formato correcto." })
                    </div>
                </div>
            </div>

            <div id="EmergencyContactSection">
                <div class="title">
                    <h3>Contactos Emergencia</h3>
                    <div style="color:red; ">
                        <h8 style="color:red">Registre mínimo un contacto de emergencia.</h8>
                        <h6>Datos requeridos*</h6>
                    </div>
                </div>

                <div class="emergencyContactSectionFlex">
                    <div>
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label required" })
                        @Html.Hidden("employeeContactid")
                        @Html.TextBox("firstnameContact", "", new { @class = "form-control", @id = "firstnameContact" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label required" })
                        @Html.TextBox("lastnameContact", "", new { @class = "form-control", @id = "lastnameContact" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label required" })
                        @Html.DropDownListFor(model => model.Relationship, Enum.GetValues(typeof(RelationshipEmergenyContactType)).Cast<RelationshipEmergenyContactType>().Select(e => new SelectListItem { Text = e.ToString(), Value = e.ToString() }), "Seleccione Parentesco", new { @class = "form-control", @id = "relationship" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Telephone1, htmlAttributes: new { @class = "control-label required" })
                        @Html.TextBox("telephone1Contact", "", new { @class = "form-control", @id = "telephone1Contact" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Telephone2, htmlAttributes: new { @class = "control-label required" })
                        @Html.TextBox("telephone2Contact", "", new { @class = "form-control", @id = "telephone2Contact" })
                    </div>

                    <a id="btnSaveContact" class="btn btn-success" title="Agregar contacto emergencia.">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-person-fill-add" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0Zm-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                            <path d="M2 13c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z" />
                        </svg>
                    </a>
                </div>

                <div>
                    <div clase="contenedor" style=" margin-top: 34%; margin-left: -4%;">
                        <div clase="fila justificar-contenido-md-centro">
                            <div clase="col-md-8">
                                <div class=" ajax-loader"></div>
                                <table class="table table-bordered" id="tblContactList">
                                    <thead>
                                        <tr>
                                            <th colspan="7">Lista Contactos Emergencia</th>
                                        </tr>
                                        <tr>
                                            <th>Nombre</th>
                                            <th>Apellido</th>
                                            <th>Relación</th>
                                            <th>Teléfono</th>
                                            <th>Otro Teléfono</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="fieldset" id="CollaboratorFieldFooter">
            <button type="button" onclick="window.location.href='/Collaborator/Index/'" class="btn btn-secondary">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="25" height="25" fill="currentColor" class="bi-arrow-bar-left" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M12.5 15a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5ZM10 8a.5.5 0 0 1-.5.5H3.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L3.707 7.5H9.5a.5.5 0 0 1 .5.5Z" />
                </svg>
                Regresar
            </button>
            <input type="submit" value="Guardar" class="btn btn-success">
        </div>
     }
</div>


